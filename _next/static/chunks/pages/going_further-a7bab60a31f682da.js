(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[71],{5537:function(e,s,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/going_further",function(){return n(6710)}])},9369:function(e,s,n){"use strict";var t=n(5893),o=n(7294),r=n(2236);function i(e){let{n:s}=e,{number:n}=(0,r.q_)({from:{number:0},number:s,delay:200,config:{mass:1,tension:20,friction:10}});return(0,t.jsx)(r.q.p,{className:"nx-text-xs",children:n.to(e=>e.toFixed(0))})}let a={logo:(0,t.jsx)(function(){return(0,t.jsxs)("div",{style:{display:"flex",justifyContent:"center",alignItems:"center"},children:[(0,t.jsx)("img",{style:{borderRadius:"5px",marginRight:"10px"},width:50,src:"./scaffold_logo.png"}),(0,t.jsx)("h1",{style:{fontWeight:"bold",color:"#F76E57"},children:"Scala Fullstack Scaffold"})]})},{}),project:{link:"https://github.com/do4-2022/scala-fullstack-scaffold.g8"},banner:{text:(0,t.jsxs)("a",{href:"https://github.com/do4-2022/scala-fullstack-scaffold.g8/issues/new?title=Feedback%20for%20%E2%80%9Cscala-fullstack-scaffold%E2%80%9D&labels=feedback",target:"_blank",children:[(0,t.jsx)("strong",{children:"Scala Fullstack Scaffold's documentation is under construction."})," Give us your feedback →"]})},navbar:{extraContent:(0,t.jsx)(function(){let[e,s]=(0,o.useState)(0);return(0,o.useEffect)(()=>{fetch("https://api.github.com/repos/do4-2022/scala-fullstack-scaffold.g8").then(e=>e.json()).then(e=>s(e.stargazers_count))},[]),(0,t.jsxs)("a",{style:{display:"flex",justifyContent:"center",alignItems:"center"},href:"https://github.com/do4-2022/scala-fullstack-scaffold.g8",target:"_blank",rel:"noopener noreferrer",children:[(0,t.jsx)("div",{style:{borderRadius:"5px 0 0 5px",display:"flex",justifyContent:"center",alignItems:"center"},className:"nx-border nx-border-gray-300 dark:nx-border-gray-600 nx-py-1 nx-px-2",children:(0,t.jsx)("p",{className:"nx-text-xs",children:"⭐ Star"})}),(0,t.jsx)("div",{style:{borderRadius:"0 5px 5px 0",borderLeft:"none",display:"flex",justifyContent:"center",alignItems:"center",overflow:"hidden"},className:"nx-border nx-border-gray-300 dark:nx-border-gray-600 nx-py-1 nx-px-2",children:(0,t.jsx)(i,{n:e})})]})},{})},docsRepositoryBase:"https://github.com/do4-2022/scala-fullstack-scaffold.g8",editLink:{text:"Edit this page on GitHub →"},footer:{text:"MIT 2023 \xa9 Scala Fullstack Scaffold maintainers."}};s.Z=a},6710:function(e,s,n){"use strict";n.r(s);var t=n(5893),o=n(2673),r=n(1712),i=n(9369);n(9966);var a=n(1151);n(5675);let l={MDXContent:function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:s}=Object.assign({},(0,a.ah)(),e.components);return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(c,{...e})}):c(e)},pageOpts:{filePath:"pages/going_further.mdx",route:"/going_further",headings:[{depth:1,value:"Overview",id:"overview"},{depth:2,value:"File Presentation",id:"file-presentation"},{depth:2,value:"Implementation",id:"implementation"},{depth:3,value:"Route",id:"route"},{depth:2,value:"Service",id:"service"}],pageMap:[{kind:"Meta",data:{index:"Introduction",requirements:"Requirements",quick_start:"Quick Start",going_further:"Going further",deploy:"Deployment",about:{title:"About",type:"page"}}},{kind:"MdxPage",name:"about",route:"/about"},{kind:"MdxPage",name:"deploy",route:"/deploy"},{kind:"MdxPage",name:"going_further",route:"/going_further"},{kind:"MdxPage",name:"index",route:"/"},{kind:"MdxPage",name:"quick_start",route:"/quick_start",frontMatter:{title:"Getting started with Scala Fullstack Scaffold",description:"Ready to dive into a Scala Fullstack Architecture ? You are at the right place"}},{kind:"MdxPage",name:"requirements",route:"/requirements"}],flexsearch:{codeblocks:!0},title:"Overview"},pageNextRoute:"/going_further",nextraLayout:r.ZP,themeConfig:i.Z};function c(e){let s=Object.assign({h1:"h1",p:"p",h2:"h2",ul:"ul",li:"li",strong:"strong",code:"code",h3:"h3",pre:"pre",span:"span",ol:"ol",a:"a"},(0,a.ah)(),e.components);return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.h1,{children:"Overview"}),"\n",(0,t.jsx)(s.p,{children:"In this section, we will describe the backend architecture and see how to modify the CRUD."}),"\n",(0,t.jsx)(s.h2,{id:"file-presentation",children:"File Presentation"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"main.scala"}),": This file serves as the entry point of the application. It launches an HTTP server that listens on a specified port (or the default port 8080). The server is configured to use the routes defined in ",(0,t.jsx)(s.code,{children:"TodoController.routes"}),"."]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"todo.scala"}),": This file defines the structure of a todo task, including its properties such as ID, title, and completion status. It also provides implementations for encoding and decoding todos to JSON. To create your own structure, you need to define the object as a case class. Don't forget to implement the JSON encoder."]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"DB.scala"}),": This file handles the configuration and connection to the database. There are two versions: one for PostgreSQL and one for MongoDB. Environment variables are used to retrieve the database connection information. For PostgreSQL, a JDBC connection is established, while for MongoDB, a MongoDB client is created to interact with the database. You normally don't need to modify this file."]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"TodoController.scala"}),": This file handles the HTTP routes for todo-related operations. It defines the CORS configuration and specifies the base path for the routes. The routes call the corresponding functions in ",(0,t.jsx)(s.code,{children:"TodoService"}),"."]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"TodoService.scala"}),": This file contains the business logic for the application. It defines functions for interacting with the database, such as retrieving todos, creating a new todo, updating a todo, and deleting a todo."]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(s.h2,{id:"implementation",children:"Implementation"}),"\n",(0,t.jsx)(s.h3,{id:"route",children:"Route"}),"\n",(0,t.jsx)(s.p,{children:"To implement a new route, follow the structure below:"}),"\n",(0,t.jsx)(s.pre,{"data-language":"scala","data-theme":"default",hasCopyCode:!0,children:(0,t.jsxs)(s.code,{"data-language":"scala","data-theme":"default",children:[(0,t.jsxs)(s.span,{className:"line",children:[(0,t.jsx)(s.span,{style:{color:"var(--shiki-token-keyword)"},children:"case"}),(0,t.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:" Method.GET "}),(0,t.jsx)(s.span,{style:{color:"var(--shiki-token-keyword)"},children:"->"}),(0,t.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:" BasePath "}),(0,t.jsx)(s.span,{style:{color:"var(--shiki-token-keyword)"},children:"=>"}),(0,t.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:" {"})]}),"\n",(0,t.jsx)(s.span,{className:"line",children:(0,t.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"  TodoService"})}),"\n",(0,t.jsx)(s.span,{className:"line",children:(0,t.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"    .getTodos()"})}),"\n",(0,t.jsx)(s.span,{className:"line",children:(0,t.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"    .map(_.toJson)"})}),"\n",(0,t.jsx)(s.span,{className:"line",children:(0,t.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"    .map(Response.text(_))"})}),"\n",(0,t.jsx)(s.span,{className:"line",children:(0,t.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"    .orElse("})}),"\n",(0,t.jsx)(s.span,{className:"line",children:(0,t.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"      ZIO.succeed("})}),"\n",(0,t.jsx)(s.span,{className:"line",children:(0,t.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"        Response.fromHttpError("})}),"\n",(0,t.jsxs)(s.span,{className:"line",children:[(0,t.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"          HttpError.NotFound("}),(0,t.jsx)(s.span,{style:{color:"var(--shiki-token-string-expression)"},children:'"No todos found"'}),(0,t.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:")"})]}),"\n",(0,t.jsx)(s.span,{className:"line",children:(0,t.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"        )"})}),"\n",(0,t.jsx)(s.span,{className:"line",children:(0,t.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"      )"})}),"\n",(0,t.jsx)(s.span,{className:"line",children:(0,t.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"    )"})}),"\n",(0,t.jsx)(s.span,{className:"line",children:(0,t.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"}"})})]})}),"\n",(0,t.jsx)(s.p,{children:"The function corresponds to an HTTP GET route to fetch all todos."}),"\n",(0,t.jsx)(s.p,{children:"TodoService.getTodos() is called to retrieve all todo tasks from the database. This operation returns a ZIO effect encapsulating a sequence of tasks."}),"\n",(0,t.jsx)(s.p,{children:"Using the map method, the retrieved tasks are transformed into JSON using the implicit JSON encoder (see DB.scala). map is used again to create an HTTP response containing the JSON string."}),"\n",(0,t.jsx)(s.p,{children:"If the TodoService.getTodos() operation fails, the orElse block is executed. It returns an HTTP error response with the 404 (Not Found) status code and a message indicating that no todos were found."}),"\n",(0,t.jsx)(s.p,{children:"To implement your own route, you should follow the same general structure:"}),"\n",(0,t.jsxs)(s.ol,{children:["\n",(0,t.jsx)(s.li,{children:"Determine the path and associated HTTP method."}),"\n",(0,t.jsx)(s.li,{children:"Use ZIO operations to interact with data sources."}),"\n",(0,t.jsx)(s.li,{children:"Transform the obtained results into an appropriate HTTP response."}),"\n",(0,t.jsx)(s.li,{children:"Handle potential errors using ZIO combinators."}),"\n"]}),"\n",(0,t.jsx)(s.h2,{id:"service",children:"Service"}),"\n",(0,t.jsx)(s.pre,{"data-language":"scala","data-theme":"default",hasCopyCode:!0,children:(0,t.jsxs)(s.code,{"data-language":"scala","data-theme":"default",children:[(0,t.jsxs)(s.span,{className:"line",children:[(0,t.jsx)(s.span,{style:{color:"var(--shiki-token-keyword)"},children:"def"}),(0,t.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,t.jsx)(s.span,{style:{color:"var(--shiki-token-function)"},children:"createTodo"}),(0,t.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"(title: String)"}),(0,t.jsx)(s.span,{style:{color:"var(--shiki-token-keyword)"},children:":"}),(0,t.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:" Task[Todo] "}),(0,t.jsx)(s.span,{style:{color:"var(--shiki-token-keyword)"},children:"="})]}),"\n",(0,t.jsxs)(s.span,{className:"line",children:[(0,t.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"  "}),(0,t.jsx)(s.span,{style:{color:"var(--shiki-token-keyword)"},children:"for"}),(0,t.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:" {"})]}),"\n",(0,t.jsxs)(s.span,{className:"line",children:[(0,t.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"    todos "}),(0,t.jsx)(s.span,{style:{color:"var(--shiki-token-keyword)"},children:"<-"}),(0,t.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:" getTodos()"})]}),"\n",(0,t.jsxs)(s.span,{className:"line",children:[(0,t.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"    newId "}),(0,t.jsx)(s.span,{style:{color:"var(--shiki-token-keyword)"},children:"="}),(0,t.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:" todos.map(_.id).max "}),(0,t.jsx)(s.span,{style:{color:"var(--shiki-token-keyword)"},children:"+"}),(0,t.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,t.jsx)(s.span,{style:{color:"var(--shiki-token-constant)"},children:"1"})]}),"\n",(0,t.jsxs)(s.span,{className:"line",children:[(0,t.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"    newTodo "}),(0,t.jsx)(s.span,{style:{color:"var(--shiki-token-keyword)"},children:"="}),(0,t.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:" Todo(newId, title, "}),(0,t.jsx)(s.span,{style:{color:"var(--shiki-token-constant)"},children:"false"}),(0,t.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:")"})]}),"\n",(0,t.jsxs)(s.span,{className:"line",children:[(0,t.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"    _ "}),(0,t.jsx)(s.span,{style:{color:"var(--shiki-token-keyword)"},children:"<-"}),(0,t.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:" ZIO"})]}),"\n",(0,t.jsxs)(s.span,{className:"line",children:[(0,t.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"      .fromFuture(_ "}),(0,t.jsx)(s.span,{style:{color:"var(--shiki-token-keyword)"},children:"=>"}),(0,t.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:" todosCollection.insertOne(newTodo).toFuture())"})]}),"\n",(0,t.jsx)(s.span,{className:"line",children:(0,t.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"      .unit"})}),"\n",(0,t.jsxs)(s.span,{className:"line",children:[(0,t.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"  } "}),(0,t.jsx)(s.span,{style:{color:"var(--shiki-token-keyword)"},children:"yield"}),(0,t.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:" newTodo"})]})]})}),"\n",(0,t.jsx)(s.p,{children:"The createTodo function is responsible for creating a new todo. It takes the title of the new task as a parameter."}),"\n",(0,t.jsx)(s.p,{children:"The function starts by calling getTodos() to retrieve all existing todos. This returns a ZIO effect encapsulating the sequence of current tasks. The sequence of tasks is then mapped to extract the maximum ID value. This ensures that the new ID will be unique."}),"\n",(0,t.jsx)(s.p,{children:"Using the provided title parameter, a new instance of the Todo structure is created with the completed status initialized to false."}),"\n",(0,t.jsx)(s.p,{children:"An effect ZIO is created using ZIO.fromFuture to execute an asynchronous operation. The insertion operation is performed using todosCollection.insertOne(newTodo).toFuture()."}),"\n",(0,t.jsx)(s.p,{children:"To implement your own function, you can follow the structure and patterns used in the TodoService functions. The only limit is your imagination."}),"\n",(0,t.jsxs)(s.p,{children:["Once finished, you should check how to ",(0,t.jsx)(s.a,{href:"/deploy",children:"deploy the application in production \uD83D\uDE80"})]})]})}s.default=(0,o.j)(l)}},function(e){e.O(0,[774,314,888,179],function(){return e(e.s=5537)}),_N_E=e.O()}]);